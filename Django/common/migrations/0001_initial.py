# Generated by Django 5.0.7 on 2024-10-02 17:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('module', models.IntegerField(choices=[(11, 'Patient Care'), (12, 'Safety'), (13, 'Image Production'), (14, 'Procedures'), (21, 'Radiologic Physics'), (22, 'Radiation Biology'), (23, 'Contrast Media'), (24, 'Pathology')])),
            ],
            options={
                'db_table': 'chapter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='This will be displayed to the user', max_length=256)),
                ('module', models.IntegerField(choices=[(11, 'Patient Care'), (12, 'Safety'), (13, 'Image Production'), (14, 'Procedures'), (21, 'Radiologic Physics'), (22, 'Radiation Biology'), (23, 'Contrast Media'), (24, 'Pathology')])),
                ('file', models.FileField(upload_to='labpdfs/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='labpdfs/')),
            ],
            options={
                'db_table': 'media_files',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('display_name', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('type', models.IntegerField(choices=[(1, 'Multiple Choice Question'), (2, 'Multiple Select Question'), (3, 'True or False')], default=1)),
                ('option_a', models.CharField(max_length=128)),
                ('option_b', models.CharField(max_length=128)),
                ('option_c', models.CharField(blank=True, max_length=128, null=True)),
                ('option_d', models.CharField(blank=True, max_length=128, null=True)),
                ('answer_key', models.CharField(max_length=4)),
                ('obsolete_ind', models.BooleanField(default=False)),
                ('created_dt_tm', models.DateTimeField(auto_now_add=True)),
                ('updt_dt_tm', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='common.chapter')),
            ],
            options={
                'db_table': 'question',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('start_dt_tm', models.DateTimeField(null=True)),
                ('end_dt_tm', models.DateTimeField(null=True)),
                ('score', models.FloatField(null=True)),
                ('updt_dt_tm', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'test',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuestionTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.BooleanField(default=None, null=True)),
                ('elapsed_time', models.DurationField(null=True)),
                ('question', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='common.question')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='common.test')),
            ],
            options={
                'db_table': 'question_test_reltn',
                'managed': True,
            },
        ),
    ]
